# https://docs.github.com/en/actions/using-workflows/reusing-workflows#example-reusable-workflow
name: deploy docker-compose to an on-prem server using scp and ssh

on:
  workflow_call:
    inputs:
      GITHUB_ENVIRONMENT:
        required: true
        type: string
      DEPLOY_HOSTS:
        required: true
        type: string
      SERVICE_ACCOUNT_USERNAME:
        required: true
        type: string
      RUNS_ON:
        required: false
        default: self-hosted
        type: string
    secrets:
      SERVICE_ACCOUNT_PASSWORD:
        required: true
        type: string
      HTTP_PROXY:
        required: true
      HTTPS_PROXY:
        required: true
      CA_BASE64:
        required: true

jobs:
  deploy-docker-compose-to-on-prem:
    name: deploy a docker-compose project to on-prem using scp and ssh

    # needs: check_version_change # https://stackoverflow.com/questions/63148639/create-dependencies-between-jobs-in-github-actions
    # https://docs.github.com/en/actions/using-jobs/defining-outputs-for-jobs
    runs-on: ${{ inputs.RUNS_ON }}
    # runs-on: ubuntu-latest
    # https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment
    environment: ${{ inputs.GITHUB_ENVIRONMENT }}

    steps:
      - uses: actions/checkout@v3

      # https://github.com/appleboy/scp-action
      - name: copy docker compose deploy file to remote servers
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ inputs.DEPLOY_HOSTS }}
          username: ${{ inputs.SERVICE_ACCOUNT_USERNAME }}
          password: ${{ secrets.SERVICE_ACCOUNT_PASSWORD }}
          overwrite: true
          source: ./docker/${{ inputs.DOCKER_COMPOSE_DEPLOY_FILE }}
          target: ~/

      # https://github.com/appleboy/ssh-action
      - name: deploying using docker compose file on remote servers
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ inputs.DEPLOY_HOSTS }}
          username: ${{ inputs.SERVICE_ACCOUNT_USERNAME }}
          password: ${{ secrets.SERVICE_ACCOUNT_PASSWORD }}
          script: |
            echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S docker stop $(echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S docker ps -aq) || true \
            && echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S docker rm -v $(echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S docker ps -aq) || true \
            && echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S docker rmi $(echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S docker images -q) || true \
            && echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S rm -f ~/docker-compose.yml \
            && touch ~/docker/${{ inputs.DOCKER_COMPOSE_DEPLOY_FILE }} \
            && echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S mv ~/docker/${{ inputs.DOCKER_COMPOSE_DEPLOY_FILE }} ~/docker-compose.yml \
            && rm -rf ~/docker \
            && echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S chmod 750 ~/docker-compose.yml \
            && echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S chown root ~/docker-compose.yml \
            && echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S docker-compose -f ~/docker-compose.yml down --rmi all --volumes --remove-orphans 2>&1 \
            && echo ${{ secrets.SERVICE_ACCOUNT_PASSWORD }} | sudo -S HOSTNAME=${HOSTNAME} docker-compose -f ~/docker-compose.yml up -d 2>&1
